import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,f as e,a as n,b as o,e as p}from"./app-ac6acc15.js";const c={},i=n("h1",{id:"获取已存在的dom元素",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#获取已存在的dom元素","aria-hidden":"true"},"#"),o(" 获取已存在的DOM元素")],-1),l=p(`<h2 id="问题描述-有一个html中的元素-已经在页面里呈现了出来。但是无论是用document-getelementbyid-zz-还是jquery中的-zz-方法都不能取到-在js下和jquery下分别返回null和-但是在审查元素过后-两种办法就都能取到了-特别奇怪。这是什么原因造成的啊-只有手动审查元素才能取到元素-不审查就在dom上没有。-不管怎么刷新都没用-还是得审查才能找到元素" tabindex="-1"><a class="header-anchor" href="#问题描述-有一个html中的元素-已经在页面里呈现了出来。但是无论是用document-getelementbyid-zz-还是jquery中的-zz-方法都不能取到-在js下和jquery下分别返回null和-但是在审查元素过后-两种办法就都能取到了-特别奇怪。这是什么原因造成的啊-只有手动审查元素才能取到元素-不审查就在dom上没有。-不管怎么刷新都没用-还是得审查才能找到元素" aria-hidden="true">#</a> 问题描述：有一个HTML中的元素，已经在页面里呈现了出来。但是无论是用document.getElementById(&quot;zz&quot;)还是jQuery中的$(&quot;#zz&quot;)方法都不能取到，在JS下和jQuery下分别返回<code>null</code>和<code>[]</code>，但是在审查元素过后，两种办法就都能取到了，特别奇怪。这是什么原因造成的啊？只有手动审查元素才能取到元素，不审查就在DOM上没有。（不管怎么刷新都没用，还是得审查才能找到元素）</h2><h2 id="_1-网络解决办法" tabindex="-1"><a class="header-anchor" href="#_1-网络解决办法" aria-hidden="true">#</a> 1.网络解决办法</h2><p><strong>如果JavaScript代码在html里的head中引入；</strong><br><strong>获取DOM节点，需要在DOM结构加载完成才可以获取到；</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*jQuery方法*/</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> $div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#zz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*JavaScript原生方法*/</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;zz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;DOM加载完毕&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*建议使用*/</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;zz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;DOM加载完毕&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-实际解决办法" tabindex="-1"><a class="header-anchor" href="#_2-实际解决办法" aria-hidden="true">#</a> 2.实际解决办法</h2><p><strong>采取上述方法问题仍未得到解决。通过检查发现，这是由于该元素写在iframe 下面，需要先获取iframe然后获取iframe中的元素才能取到。但是在学习如何获取iframe页面元素并采用多种写法后仍然没有取到，最后突然发现直接用document.getElementBy.val()就能够取到元素。</strong></p>`,8);function u(d,r){return a(),t("div",null,[i,e(" more "),l])}const v=s(c,[["render",u],["__file","getDOM.html.vue"]]);export{v as default};
